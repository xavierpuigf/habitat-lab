# @package _global_

defaults:
  - /benchmark/rearrange: multi_agent_tidy_house_fp
  - /habitat_baselines: habitat_baselines_rl_config_base
  - /habitat/simulator/sim_sensors@habitat_baselines.eval.extra_sim_sensors.third_rgb_sensor: third_rgb_sensor
  - /habitat_baselines/rl/agent: pop_play
  - /habitat_baselines/rl/policy/obs_transforms@habitat_baselines.rl.policy.agent_0.obs_transforms.add_virtual_keys:
    - add_virtual_keys_base
  - /habitat_baselines/rl/policy/obs_transforms@habitat_baselines.rl.policy.agent_1.obs_transforms.add_virtual_keys:
    - add_virtual_keys_base
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_0: hab3_hl_neural_ma
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_1: hab3_hl_neural_ma
  - /habitat_baselines/rl/policy/hierarchical_policy/defined_skills@habitat_baselines.rl.policy.agent_0.hierarchical_policy.defined_skills: oracle_skills_ma
  - /habitat_baselines/rl/policy/hierarchical_policy/defined_skills@habitat_baselines.rl.policy.agent_1.hierarchical_policy.defined_skills: oracle_skills_ma
  - /habitat/task/measurements:
    - composite_subgoal_reward
    - runtime_perf_stats
  - /habitat/task/lab_sensors:
    - multi_agent_all_predicates
    - other_agent_gps
    - has_finished_oracle_nav
  - _self_

hydra:
  job:
    name: 'pop_play'

habitat:
  environment:
    max_episode_steps: 700

  gym:
    obs_keys:
      - agent_0_head_depth
      - agent_0_relative_resting_position
      - agent_0_obj_start_gps_compass
      - agent_0_obj_goal_gps_compass
      - agent_0_joint
      - agent_0_is_holding
      - agent_0_ee_pos
      - agent_0_localization_sensor
      - agent_0_other_agent_gps
      - agent_0_has_finished_oracle_nav
      - agent_1_head_depth
      - agent_1_relative_resting_position
      - agent_1_obj_start_gps_compass
      - agent_1_obj_goal_gps_compass
      - agent_1_joint
      - agent_1_is_holding
      - agent_1_ee_pos
      - agent_1_localization_sensor
      - agent_1_other_agent_gps
      - agent_1_has_finished_oracle_nav
  simulator:
    kinematic_mode: True
    ac_freq_ratio: 1
    step_physics: False
    habitat_sim_v0:
      allow_sliding: True

habitat_baselines:
  verbose: False
  trainer_name: "ddppo"
  updater_name: "HRLPPO"
  distrib_updater_name: "HRLDDPPO"
  torch_gpu_id: 0
  video_fps: 30
  video_dir: ${hydra:sweep.dir}/${hydra:sweep.subdir}/video
  tensorboard_dir: ${hydra:sweep.dir}/${hydra:sweep.subdir}/tb
  eval_ckpt_path_dir: ${hydra:sweep.dir}/${hydra:sweep.subdir}/checkpoints
  checkpoint_folder: ${hydra:sweep.dir}/${hydra:sweep.subdir}/checkpoints
  log_file: ${hydra:sweep.dir}/${hydra:sweep.subdir}/train.log
  num_environments: 4
  num_updates: -1
  total_num_steps: 1.0e8
  log_interval: 1
  num_checkpoints: 100
  force_torch_single_threaded: True
  eval_keys_to_include_in_name: ['composite_success']
  load_resume_state_config: False
  rollout_storage_name: "HrlRolloutStorage"

  evaluate: False
  writer_type: 'tb'

  wb:
    project_name: 'hab3'
    entity: 'hab3-colab'
    run_name: ${hydra:job.name}_${now:%Y-%m-%d}_${now:%H-%M-%S}

  profiling:
    enable_perf_logger: True
    perf_logger_skip_interval: 20

  eval:
    should_load_ckpt: True
    video_option: ["disk"]

  rl:
    agent:
      num_pool_agents_per_type: [1, 8]
      agent_sample_interval: 20
      force_partner_sample_idx: -1
    policy:
      agent_0:
        hierarchical_policy:
          high_level_policy:
            policy_input_keys:
              - "head_depth"
              - "joint"
              - "is_holding"
              - "obj_start_gps_compass"
              - "obj_goal_gps_compass"
              - "other_agent_gps"
          # Override to use the oracle navigation skill (which will actually execute navigation).
          defined_skills:
            nav_to_obj:
              skill_name: "OracleNavPolicy"
              obs_skill_inputs: ["obj_start_sensor", "abs_obj_start_sensor", "obj_goal_sensor", "abs_obj_goal_sensor"]
              max_skill_steps: 300
      agent_1:
        hierarchical_policy:
          high_level_policy:
            policy_input_keys:
              - "head_depth"
              - "joint"
              - "is_holding"
              - "obj_start_gps_compass"
              - "obj_goal_gps_compass"
              - "other_agent_gps"
          # Override to use the oracle navigation skill (which will actually execute navigation).
          defined_skills:
            nav_to_obj:
              skill_name: "OracleNavPolicy"
              obs_skill_inputs: ["obj_start_sensor", "abs_obj_start_sensor", "obj_goal_sensor", "abs_obj_goal_sensor"]
              max_skill_steps: 300

    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 1
      num_mini_batch: 2
      value_loss_coef: 0.5
      entropy_coef: 0.0001
      lr: 2.5e-4
      eps: 1e-5
      max_grad_norm: 0.2
      num_steps: 256
      use_gae: True
      gamma: 0.99
      tau: 0.95

    ddppo:
      sync_frac: 0.6
      # The PyTorch distributed backend to use
      distrib_backend: NCCL
      # Visual encoder backbone
      pretrained_weights: data/ddppo-models/gibson-2plus-resnet50.pth
      # Initialize with pretrained weights
      pretrained: False
      # Initialize just the visual encoder backbone with pretrained weights
      pretrained_encoder: False
      # Whether the visual encoder backbone will be trained.
      train_encoder: True
      # Whether to reset the critic linear layer
      reset_critic: False
      # Model parameters
      backbone: resnet18
      rnn_type: LSTM
      num_recurrent_layers: 2
