# @package _global_

defaults:
  - /benchmark/rearrange: multi_agent_tidy_house
  - /habitat_baselines: habitat_baselines_rl_config_base
  - /habitat/simulator/sim_sensors@habitat_baselines.eval.extra_sim_sensors.third_rgb_sensor: third_rgb_sensor
  - /habitat_baselines/rl/agent: pop_play
  - /habitat_baselines/rl/policy/obs_transforms@habitat_baselines.rl.policy.agent_0.obs_transforms.add_virtual_keys:
    - add_virtual_keys_base
  - /habitat_baselines/rl/policy/obs_transforms@habitat_baselines.rl.policy.agent_1.obs_transforms.add_virtual_keys:
    - add_virtual_keys_base
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_0: monolithic
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_1: hab3_hl_neural
  - /habitat_baselines/rl/policy/hierarchical_policy/defined_skills@habitat_baselines.rl.policy.agent_1.hierarchical_policy.defined_skills: oracle_skills_ma_humanoid
  - /habitat/task/measurements:
    - social_nav_reward
  - /habitat/task/lab_sensors:
    - relative_resting_pos_sensor
    - target_start_sensor
    - goal_sensor
    - joint_sensor
    - is_holding_sensor
    - end_effector_sensor
    - target_start_gps_compass_sensor
    - target_goal_gps_compass_sensor
    - localization_sensor
    - humanoid_joint_sensor
  - /habitat/task/actions@habitat.task.actions.agent_0_arm_action: arm_action
  - override /habitat/task/rearrange: multi_agent_tidy_house_base
  - _self_

habitat:
  task:
    reward_measure: social_nav_reward
    slack_reward: 0.
    success_reward: 0.
    task_spec: multi_agent_tidy_house_solved
    actions:
      agent_0_arm_action:
        grip_controller: MagicGraspAction
      agent_1_oracle_nav_action:
        motion_control: human_joints
        spawn_max_dist_to_obj: -1

  environment:
    max_episode_steps: 700

  gym:
    obs_keys:
      - agent_0_head_depth
      - agent_0_relative_resting_position
      - agent_0_obj_start_sensor
      - agent_0_obj_goal_sensor
      - agent_0_obj_start_gps_compass
      - agent_0_obj_goal_gps_compass
      - agent_0_joint
      - agent_0_is_holding
      - agent_0_ee_pos
      - agent_0_localization_sensor
      - agent_1_head_depth
      - agent_1_relative_resting_position
      - agent_1_obj_start_sensor
      - agent_1_obj_goal_sensor
      - agent_1_obj_start_gps_compass
      - agent_1_obj_goal_gps_compass
      - agent_1_is_holding
      - agent_1_ee_pos
      - agent_1_localization_sensor
      - agent_1_humanoid_joint_sensor
  simulator:
    agents:
      agent_1:
        articulated_agent_urdf: 'data/humanoids/humanoid_data/female2_0.urdf'
        articulated_agent_type: KinematicHumanoid
        rest_pose_data_path: 'data/humanoids/humanoid_data/standing_pose_smplx.pkl'
        motion_data_path: "data/humanoids/humanoid_data/walking_motion_processed_smplx.pkl"

    kinematic_mode: True
    ac_freq_ratio: 1
    step_physics: False
    habitat_sim_v0:
      allow_sliding: True

habitat_baselines:
  verbose: False
  trainer_name: "ddppo"
  updater_name: "PPO"
  distrib_updater_name: "DDPPO"
  torch_gpu_id: 0
  video_fps: 30
  eval_ckpt_path_dir: "data/checkpoints"
  num_environments: 32
  num_updates: -1
  total_num_steps: 5.0e7
  log_interval: 10
  num_checkpoints: 100
  force_torch_single_threaded: True
  eval_keys_to_include_in_name: ['composite_success']
  load_resume_state_config: False
  rollout_storage_name: "HrlRolloutStorage"

  evaluate: False
  writer_type: 'wb'

  wb:
    project_name: 'hab3'
    entity: 'hab3-colab'
    run_name: ${hydra:job.name}_${now:%Y-%m-%d}_${now:%H-%M-%S}

  eval:
    should_load_ckpt: True
    video_option: ["disk"]

  rl:
    policy:
      agent_1:
        hierarchical_policy:
          high_level_policy:
            name: "FixedHighLevelPolicy"
            add_arm_rest: False
          # Override to use the oracle navigation skill (which will actually execute navigation).
          defined_skills:
            nav_to_obj:
              skill_name: "OracleNavPolicy"
              obs_skill_inputs: ["obj_start_sensor", "abs_obj_start_sensor", "obj_goal_sensor", "abs_obj_goal_sensor"]
              max_skill_steps: 300
              ignore_grip: True
    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 1
      num_mini_batch: 2
      value_loss_coef: 0.5
      entropy_coef: 0.0001
      lr: 2.5e-4
      eps: 1e-5
      max_grad_norm: 0.2
      num_steps: 128
      use_gae: True
      gamma: 0.99
      tau: 0.95

    ddppo:
      sync_frac: 0.6
      # The PyTorch distributed backend to use
      distrib_backend: NCCL
      # Visual encoder backbone
      pretrained_weights: data/ddppo-models/gibson-2plus-resnet50.pth
      # Initialize with pretrained weights
      pretrained: False
      # Initialize just the visual encoder backbone with pretrained weights
      pretrained_encoder: False
      # Whether the visual encoder backbone will be trained.
      train_encoder: True
      # Whether to reset the critic linear layer
      reset_critic: False
      # Model parameters
      backbone: resnet18
      rnn_type: LSTM
      num_recurrent_layers: 2
